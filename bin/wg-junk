#!/bin/sh -e
#
# Thanks to ValdikSS & people at https://ntc.party/t/wireguard/4968
#

pub2end=`wg show "${1}" endpoints`

uname=$(uname)

if [ "$uname" = Linux ]; then
  # dash's `read' fails to parse this pseudo-file.
  lo=$(cut -f 1 /proc/sys/net/ipv4/ip_local_port_range)
  hi=$(cut -f 2 /proc/sys/net/ipv4/ip_local_port_range)
elif [ "$uname" = FreeBSD ]; then
  lo=$(sysctl -n net.inet.ip.portrange.hifirst)
  hi=$(sysctl -n net.inet.ip.portrange.hilast)
fi

if [ -z "$lo" -o -z "$hi" ]; then
  lo=1024
  hi=65535
fi

rng() {
  # Note: `sh' has no $RANDOM and no $SRANDOM, that's not `bash'.
  hexdump -n 4 -e '"%u"' /dev/urandom
}

randport=$(( $lo + (`rng` % ($hi - $lo + 1)) ))

td=`mktemp -d`
trap 'rm -rf "${td}"' EXIT

for endpoint in $pub2end; do
  if [ "$endpoint" != "${endpoint#*:}" ]; then # it has `:`, it's not pubkey :-)
    dsthost="${endpoint%:[1-9]*}"
    dstport="${endpoint##*:}"
    # DPI takes 14 packets in _any_ direction
    nping --hide-sent --rate 15 --count 15 --udp --source-port "$randport" --dest-port "$dstport" "$dsthost" --data-length $(( (1 + (`rng` % 31)) * 4 )) >"${td}/${dsthost}:${dstport}" 2>&1 &
  fi
done
wait

cd "$td"
grep RECV *:* || true
cd /

echo + wg set "${1}" listen-port "$randport" 1>&2
wg set "${1}" listen-port "$randport"
